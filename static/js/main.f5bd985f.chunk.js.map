{"version":3,"sources":["constants.js","components/Reducers/commentreducer.js","components/CommentList.js","components/AddComment.js","components/Actions/commentaction.js","components/PostDetail.js","App.js","store.js","index.js"],"names":["POSTCOMMENT","initalState","CommentList","useState","newComments","setnewComments","fetchcomment","a","fetch","then","res","json","data","useEffect","map","comment","commentdata","id","useStyles","makeStyles","theme","root","margin","spacing","width","BasicTextFields","classes","dispatch","useDispatch","content","setcontent","submitHandler","event","type","payload","postthecomment","getState","thedetails","data1","length","method","headers","body","JSON","stringify","alert","className","noValidate","autoComplete","TextField","label","placeholder","value","onChange","e","target","Button","variant","onClick","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","RecipeReviewCard","React","expanded","setExpanded","Card","CardHeader","Avatar","aria-label","action","IconButton","title","subheader","CardMedia","image","CardContent","Typography","color","component","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","App","path","exact","store","createStore","state","push","console","log","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5bd985f.chunk.js","sourcesContent":["export const POSTCOMMENT = 'POSTCOMMENT';\r\n\r\n","import {POSTCOMMENT } from '../../constants'\r\n\r\nconst initalState = []\r\n\r\nexport const NewCommentReducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case POSTCOMMENT: {\r\n        \r\n            state.push(action.payload)\r\n\r\n            console.log(state)\r\n            return [...state]\r\n        }\r\n\r\n        \r\n        default: return [...state]\r\n    }\r\n\r\n}\r\nexport const addthedetail = () => async (dispatch, getState) => {\r\n    \r\n    const thedetails = getState()\r\n    const data1 = thedetails[thedetails.length - 1]\r\n    await fetch(\"https://60d422e261160900173ca596.mockapi.io/commentpost\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-type': 'application/json'\r\n        },\r\n    body: JSON.stringify(data1)\r\n         })\r\n    alert(\"Comment Added\")\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nconst CommentList = () => {\r\n  const [newComments, setnewComments] = useState([])\r\n\r\n  const fetchcomment = async () => { \r\n    fetch('https://60d422e261160900173ca596.mockapi.io/commentpost')\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n     setnewComments(data)\r\n    })\r\n    }\r\n\r\n    useEffect(() => {\r\n    fetchcomment()\r\n     }, []);\r\n\r\n    return (\r\n      <tbody>\r\n        \r\n                     {\r\n                     \r\n                      newComments.map((comment)=>{\r\n                        return (\r\n                        <tr key={comment.id}>\r\n                          \r\n                          <td>{comment.commentdata}</td>\r\n                       \r\n                         \r\n                        </tr>\r\n                        )\r\n                      }) \r\n                     }\r\n                  </tbody>\r\n);  \r\n}\r\n\r\nexport default CommentList\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { postthecomment } from './Actions/commentaction'\r\nimport { addthedetail } from './Reducers/commentreducer'\r\nimport CommentList from './CommentList';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '35ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default function BasicTextFields() {\r\n  const classes = useStyles();\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const[content,setcontent] = useState(\"\");\r\n\r\n  const submitHandler=(event)=>{\r\n      const data={commentdata:content}\r\n      dispatch(postthecomment(data));\r\n      dispatch(addthedetail());\r\n      setcontent(\"\");\r\n  };\r\n\r\n  return (\r\n      <div>\r\n        <CommentList/>\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField id=\"standard-basic\" label=\"Comment\" placeholder=\"Write comment here\"\r\n      value={content}\r\n      onChange={(e)=>setcontent(e.target.value)} />\r\n      <Button variant=\"contained\" onClick={() => { submitHandler() }}>Post</Button>\r\n      \r\n\r\n    </form>\r\n    </div>\r\n  );\r\n}\r\n","import {POSTCOMMENT} from '../../constants'\r\n\r\n\r\nexport const postthecomment = (data) => {\r\n    return {\r\n        type: POSTCOMMENT,\r\n        payload: data\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport BasicTextFields from './AddComment'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            R\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"Shrimp and Chorizo Paella\"\r\n        subheader=\"September 14, 2016\"\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image=\"/static/images/cards/paella.jpg\"\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          This impressive paella is a perfect party dish and a fun meal to cook together with your\r\n          guests. Add 1 cup of frozen peas along with the mussels, if you like.\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n        \r\n         <BasicTextFields/>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport RecipeReviewCard from './components/PostDetail';\r\n\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\nconst App = () => {\r\n    return (\r\n            <Switch>\r\n                <Route path=\"/\" component={RecipeReviewCard} exact/>\r\n            </Switch>\r\n       \r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport {NewCommentReducer} from './components/Reducers/commentreducer.js';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(NewCommentReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\nReactDOM.render(<BrowserRouter>\r\n  <Provider store = {store}>\r\n        <App/>\r\n        </Provider>\r\n</BrowserRouter>, document.getElementById(\"root\"));\r\n\r\n\r\n\r\n"],"sourceRoot":""}